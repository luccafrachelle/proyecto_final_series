---
title: "Entrega Final - Series Cronológicas"
subtitle: "Facultad de Ciencias Económicas y Administración - 2025 - UDeLaR"
author: "Leandro Berrueta, Lucca Frachelle, Cecilia Waksman"
date: today
warning: false
message: false
echo: false
format: 
  html:
    toc: true
    toc-depth: 3
    number-sections: true
    theme:
      light: flatly
      dark: darkly
    fig-align: center
    toc-float: true
embed-resources: true
toc-location: right
toc-title: 'Contenido'
---

```{r}
# Paquetes:
library(forecast)
library(tidyverse)
library(tseries)
library(forecast)
library(urca)
library(lmtest)
library(gridExtra)
library(seasonal)
library(readxl)
library(knitr)
library(kableExtra)
library(broom)
library(tseries)
library(gtsummary)
library(latex2exp) # Permite usar TeX() para incluir elementos LaTeX en ggplots.
```

```{r}
df <- read_excel("series_bcu.xlsx" , sheet = "cantidad_personas_deuda_vigente") %>%
  select(fecha, cantidad_clientes, tipoinstitucion) %>%
  filter(tipoinstitucion == "Santander")
cantidad_clientes_ts <- ts(df$cantidad_clientes, start = c(2018, 12), frequency = 12)
```

Se dispone de una serie mensual con la cantidad de clientes con deuda vigente en el Banco Santander en el período Diciembre - 2018 a Marzo - 2025. 

Una primera visualización de la serie permite identificar una clara tendencia creciente a lo largo del tiempo, especialmente a partir de 2020, con un aumento significativo hacia 2024. 

En principio no se logra reconocer un comportamiento estacional evidente o un patrón repetitivo a intervalos fijos en la serie. 

La variabilidad parece aumentar ligeramente con el nivel de la serie, lo que podría sugerir la necesidad de aplicar una transformación logarítmica a modo de homogeneizar la Varianza de la serie. El uso de dicha transformación se evaluará más adelante tomando como insumo el comportamiento de los residuos.




# Análisis Inicial

## Gráfico de la Serie Temporal


```{r}
autoplot(cantidad_clientes_ts) + 
  labs(x = "Fecha", y = "Cantidad 
       de personas", title = "Serie de Cantidad de Personas con Deuda en Santander") +
  theme_minimal() +
  theme(axis.title.y = element_text(angle = 0, vjust = 0.5)) + 
  theme(panel.grid.minor = element_blank()) 

```


```{r}
## series log
cantidad_clientes_ts_log <- log(cantidad_clientes_ts)
autoplot(cantidad_clientes_ts_log) + 
  labs(x = "Fecha", y = "Cantidad 
       de personas", title = "Serie de Cantidad de Personas con Deuda en Santander log") +
  theme_minimal() +
  theme(axis.title.y = element_text(angle = 0, vjust = 0.5)) + 
  theme(panel.grid.minor = element_blank())

```

## Estadísticas Descriptivas
```{r}
cantidad_clientes_ts %>%  
  summary() %>%  
  enframe(name = "Estadística", value = "Valor") |> 
  kable(caption = "Estadísticas Descriptivas de la Serie de Cantidad de Personas con Deuda") 
```

# Identificación del Modelo

## Análisis en el Dominio del Tiempo

### Función de Autocorrelación (FAC)
```{r}
clientes_acf <- ggAcf(cantidad_clientes_ts, lag.max = 24, type = "correlation") + 
  labs(x = "k (Rezago)", 
       y = TeX(r"($\hat{\rho_{k}}$)"), title = "Función de Autocorrelación (FAC)") +
  theme_minimal() +
  theme(axis.title.y = element_text(angle = 0, vjust = 0.5)) + 
  theme(panel.grid.minor = element_blank())

clientes_acf
```

Se observa que la Función de Aucorrelación (FAC) decrece lentamente y de forma persistente, con coeficientes de autocorrelación significativos que se mantienen altos incluso en rezagos grandes y que, por ende, no se comportan de acuerdo al decaimiento exponencial que caracteriza a las series débilmente estacionarias^[En el presente trabajo se utilizará como sinónimos "estacionariedad en sentido débil", "estacionariedad en covarianza" y "estacionariedad", al igual que se hizo durante el desarrollo del curso.]. Esto es un fuerte indicio de que la serie no es estacionaria. 

Además, las autocorrelaciones significativas en rezagos altos sugieren la presencia de una tendencia, detalle claramente observable al inspeccionar el gráfico de la serie.

### Función de Autocorrelación Parcial (FACP)
```{r}
clientes_pacf <- ggAcf(cantidad_clientes_ts, lag.max = 24, type = "partial") + 
    labs(x = "k (Rezago)", 
       y = TeX(r"($\hat{\alpha_{k}}$)"), title = "Función de Autocorrelación Parcial (FACP)") +
  theme_minimal() +
  theme(axis.title.y = element_text(angle = 0, vjust = 0.5)) + 
  theme(panel.grid.minor = element_blank())

clientes_pacf
```

La Función de Aucorrelación Parcial (FACP) muestra un coeficiente significativo en el primer rezago y luego decae rápidamente, no habiendo otro rezago que resulte significativo al nivel de significación usual del 5%. 

Esto podría sugerir un componente AR(1) si la serie fuera estacionaria. Sin embargo, dada la FAC planteada anteriormente, se concluye de este primer análisis del Dominio del Tiempo en la necesidad de aplicar, al menos, una primera diferencia regular a la serie.

## Análisis en el Dominio de Frecuencias

```{r}
# Espectro de la Serie:
Espectro_Serie <- spectrum(cantidad_clientes_ts, method = c("ar"), 
                           freq = seq(from = 0, to = 0.5, length.out = 1000), plot = FALSE) 
# Se transforma las frecuencias para el intervalo [0,\pi]:
Espectro_Serie_Tibble <- tibble(Frecuencias = Espectro_Serie$freq*pi/max(Espectro_Serie$freq),
                                Espectro = Espectro_Serie$spec)
# Plot:
Plot_Espectro_Suavizado <- ggplot(Espectro_Serie_Tibble) +
  geom_line(aes(Frecuencias, Espectro)) +
  labs(x = TeX(r"($\omega$ (Frecuencias))"), 
       y = TeX(r"($S_{X}$(\omega))"),
       title = TeX(r"(Periodograma Suavizado de la Serie)"),
       subtitle = "Método: AR(1)",
       color = "") +
  theme_minimal() +
  theme(axis.title.y = element_text(angle = 0, vjust = 0.5)) +
  guides(color = guide_legend(position = "bottom"))
Plot_Espectro_Suavizado  
```

Mediante el Periodograma Suavizado de la serie es posible respaldar la idea de que la misma presenta una tendencia que debería ser modelada. 

En particular, las frecuencias más próximas a 0, y por ende las asociadas a ciclos de período próximo a infinito (el componente tendencial) explica la mayor parte de la variabilidad de la serie^[Corresponde resaltar, sin embargo, que la relación entre el área que se encuentra por debajo del Espectro/Periodograma y la Varianza de la serie se plantea para series estacionarias, propiedad que claramente no caracteriza a la serie en tratamiento.].  

## Serie Diferenciada de acuerdo a la Primera Diferencia Regular
```{r}
diff_cantidad_clientes_ts <- diff(cantidad_clientes_ts, differences = 1)
autoplot(diff_cantidad_clientes_ts) + 
  labs(x = "Fecha", y = "Cantidad de 
       Personas", 
       title = "Serie de Cantidad de Personas con Deuda en Santander",
       subtitle = "Primera Diferencia Regular") +
  theme_minimal() +
  theme(axis.title.y = element_text(angle = 0, vjust = 0.5)) + 
  theme(panel.grid.minor = element_blank())
```

## FAC y FACP de la Serie Diferenciada
```{r}
diff_clientes_acf <- ggAcf(diff_cantidad_clientes_ts, lag.max = 24, type = "correlation") +
      labs(x = "k (Rezago)", 
       y = TeX(r"($\hat{\rho_{k}}$)"), title = "FAC de la Serie Diferenciada") +
  theme_minimal() +
  theme(axis.title.y = element_text(angle = 0, vjust = 0.5)) + 
  theme(panel.grid.minor = element_blank())

diff_clientes_pacf <- ggAcf(diff_cantidad_clientes_ts, lag.max = 24, type = "partial") +
    labs(x = "k (Rezago)", 
       y = TeX(r"($\hat{\alpha_{k}}$)"), title = "FACP de la Serie Diferenciada") +
  theme_minimal() +
  theme(axis.title.y = element_text(angle = 0, vjust = 0.5)) + 
  theme(panel.grid.minor = element_blank())

grid.arrange(diff_clientes_acf, diff_clientes_pacf)
```

```{r}
ggseasonplot(diff_cantidad_clientes_ts) +
  labs(x = "Fecha", y = "Cantidad de 
       Personas", 
       title = "Serie de Cantidad de Personas con Deuda en Santander",
       subtitle = "Primera Diferencia Regular") +
  theme_minimal() +
  theme(axis.title.y = element_text(angle = 0, vjust = 0.5)) + 
  theme(panel.grid.minor = element_blank())
```
{r}
```{r}
ggmonthplot(cantidad_clientes_ts) +
labs(x = "Meses",
y = "Cantidad de Personas")

```

Al analizar la Función de Autocorrelación de la serie de Cantidad de Personas con Deuda en Santander una vez aplicada la primera diferencia regular ($d=1$), se observa que, aunque la tendencia lineal ha sido eliminada (lo que se corrobora con los tests de Dickey-Fuller Aumentado y KPSS, CHEQUEAR UNA VEZ DADOS TEST DE RAICES UNITARIAS), persisten patrones de Autocorrelación significativos.

Específicamente, se nota la presencia de coeficientes significativos en el rezago 3, en el rezago 6 y en el rezago 9, con una rápida aproximación a las bandas de confianza^[El coeficiente asociado al rezago 12 también es significativo, aunque como su magnitud es mayor a la del coeficiente del rezago 9 se decide, en principio, trabajar con los rezagos $k = 3, 6, 9$. Si bien 12 es múltiplo de 3 y por ende su significación puede estar ligada a la trimestralidad, no se debe descartar que pueda existir un componente de estacionalidad anual.]. 

De esta manera se puede destacar que las observaciones se encuentran autocorrelacionadas con sus valores de 3, 6 y 9 meses atrás. Dado que estos rezagos son múltiplos de 3 es que se plantea modelar una estacionalidad de tipo trimestral. Para ello se aplicará una Primera Diferencia Estacional asociada al rezago $k = 3$.

## Serie Diferenciada de acuerdo a la Primera Diferencia Regular y Primera Diferencia Estacional (Trimestral)
```{r}
diff_estacional<- diff(diff_cantidad_clientes_ts, lag = 3)
```

## Gráfico de la Serie Diferenciada Estacional
```{r}
autoplot(diff_estacional) +
  labs(x = "Fecha", y = "Cantidad de 
       Personas", 
       title = "Serie de Cantidad de Personas con Deuda en Santander",
       subtitle = "Primera Diferencia Regular y Primera Diferencia Estacional (Trimestral)") +
  theme_minimal() +
  theme(axis.title.y = element_text(angle = 0, vjust = 0.5)) + 
  theme(panel.grid.minor = element_blank())
```

## FAC y FACP de la Serie Diferenciada (Regular y Estacional)
```{r}
diff_estacional_acf <- ggAcf(diff_estacional, lag.max = 24, type = "correlation") +
    labs(x = "k (Rezago)", 
       y = TeX(r"($\hat{\rho_{k}}$)"), title = "FAC de la Serie Diferenciada (Regular y Estacional)") +
  theme_minimal() +
  theme(axis.title.y = element_text(angle = 0, vjust = 0.5)) + 
  theme(panel.grid.minor = element_blank())

diff_estacional_pacf <- ggAcf(diff_estacional, lag.max = 24, type = "partial") +
    labs(x = "k (Rezago)", 
       y = TeX(r"($\hat{\alpha_{k}}$)"), title = "FACP de la Serie Diferenciada (Regular y Estacional)") +
  theme_minimal() +
  theme(axis.title.y = element_text(angle = 0, vjust = 0.5)) + 
  theme(panel.grid.minor = element_blank())

grid.arrange(diff_estacional_acf, diff_estacional_pacf)
```

## Serie Diferenciada de acuerdo a la Primera Diferencia Regular y Primera Diferencia Estacional (Anual)
```{r}
diff_estacional_anual <- diff(diff_cantidad_clientes_ts, lag = 12)
```


## Gráfico de la Serie Diferenciada Estacional Anual
```{r}
autoplot(diff_estacional_anual) +
  labs(x = "Fecha", y = "Cantidad de 
       Personas", 
       title = "Serie de Cantidad de Personas con Deuda en Santander",
       subtitle = "Primera Diferencia Regular y Primera Diferencia Estacional (Anual)") +
  theme_minimal() +
  theme(axis.title.y = element_text(angle = 0, vjust = 0.5)) + 
  theme(panel.grid.minor = element_blank())
```

## FAC y FACP de la Serie Diferenciada (Regular y Estacional Anual)
```{r}
diff_estacional_anual_acf <- ggAcf(diff_estacional_anual, lag.max = 24, type = "correlation") +
    labs(x = "k (Rezago)", 
       y = TeX(r"($\hat{\rho_{k}}$)"), title = "FAC de la Serie Diferenciada (Regular y Estacional Anual)") +
  theme_minimal() +
  theme(axis.title.y = element_text(angle = 0, vjust = 0.5)) + 
  theme(panel.grid.minor = element_blank())

diff_estacional_anual_pacf <- ggAcf(diff_estacional_anual, lag.max = 24, type = "partial") +
    labs(x = "k (Rezago)", 
       y = TeX(r"($\hat{\alpha_{k}}$)"), title = "FACP de la Serie Diferenciada (Regular y Estacional Anual)") +
  theme_minimal() +
  theme(axis.title.y = element_text(angle = 0, vjust = 0.5)) + 
  theme(panel.grid.minor = element_blank())

grid.arrange(diff_estacional_anual_acf, diff_estacional_anual_pacf)
```

# Modelos Propuesto

## Exploración del Modelo ARIMA(3,1,0)

### Ajuste del Modelo ARIMA(3,1,0)
```{r}
modelo_arima_310 <- Arima(y = cantidad_clientes_ts,
                     order = c(3, 1, 0),
                     method = "ML")

sarima_coef_p_values_df_310 <- coeftest(modelo_arima_310) |>
  unclass() |>
  as.data.frame() |>
  tibble::rownames_to_column(var = "term") |>
  dplyr::select(term, `Pr(>|z|)`) |>
  dplyr::rename(p.value = `Pr(>|z|)`) 

tbl_regression(modelo_arima_310, exponentiate = FALSE) |>
  modify_header(label = "**Término**") |>
  modify_caption("Coeficientes del Modelo ARIMA(3,1,0)") |>
  modify_table_body(~ .x |>
                      dplyr::left_join(sarima_coef_p_values_df_310, by = "term")) |>
  add_significance_stars()
```

### Criterios de Información del Modelo ARIMA(3,1,0)
```{r}
model_arima_310_metrics <- data.frame(
  AIC = modelo_arima_310$aic,
  AICc = modelo_arima_310$aicc,
  BIC = modelo_arima_310$bic
)
kable(model_arima_310_metrics, caption = "Criterios de Información del Modelo ARIMA(3,1,0)")
```


### Diagnóstico de los Residuos del Modelo ARIMA(3,1,0)

#### FAC y FACP de los Residuos
```{r}
residuos_arima_310 <- residuals(modelo_arima_310)
residuos_arima_310_acf <- ggAcf(residuos_arima_310, lag.max = 24, type = "correlation") +
  labs(x = "Rezago", y = "Autocorrelación", title = "FAC de los Residuos del ARIMA(3,1,0)")
residuos_arima_310_pacf <- ggAcf(residuos_arima_310, lag.max = 24, type = "partial") +
  labs(x = "Rezago", y = "Autocorrelación parcial", title = "FACP de los Residuos del ARIMA(3,1,0)")
grid.arrange(residuos_arima_310_acf, residuos_arima_310_pacf)
```

## Exploración del Modelo SARIMA(3,1,0)(0,1,0)[12]

Como los FAC y FACP de la serie con primera diferencia regular muestran una relación significativa en el rezago 12, se va a explorar un modelo SARIMA(3,1,0)(0,1,0)[12].

### Ajuste del Modelo SARIMA(3,1,0)(0,1,0)[12]
```{r}
modelo_sarima_310_010_12 <- Arima(y = cantidad_clientes_ts,
                     order = c(3, 1, 0),
                     seasonal = list(order = c(0, 1, 0), period = 12),
                     method = "ML")

sarima_coef_p_values_df_310_010_12 <- coeftest(modelo_sarima_310_010_12) |>
  unclass() |>
  as.data.frame() |>
  tibble::rownames_to_column(var = "term") |>
  dplyr::select(term, `Pr(>|z|)`) |>
  dplyr::rename(p.value = `Pr(>|z|)`) 

tbl_regression(modelo_sarima_310_010_12, exponentiate = FALSE) |>
  modify_header(label = "**Término**") |>
  modify_caption("Coeficientes del Modelo SARIMA(3,1,0)(0,1,0)[12]") |>
  modify_table_body(~ .x |>
                      dplyr::left_join(sarima_coef_p_values_df_310_010_12, by = "term")) |>
  add_significance_stars()
```

### Criterios de Información del Modelo SARIMA(3,1,0)(0,1,0)[12]
```{r}
model_sarima_310_010_12_metrics <- data.frame(
  AIC = modelo_sarima_310_010_12$aic,
  AICc = modelo_sarima_310_010_12$aicc,
  BIC = modelo_sarima_310_010_12$bic
)
kable(model_sarima_310_010_12_metrics, caption = "Criterios de Información del Modelo SARIMA(3,1,0)(0,1,0)[12]")
```

### Medidas de Error del Modelo SARIMA(3,1,0)(0,1,0)[12]
```{r}
error_measures_sarima_310_010_12 <- accuracy(modelo_sarima_310_010_12) %>%
  as.data.frame() %>%
  tibble::rownames_to_column(var = "Conjunto") %>%
  dplyr::rename(
    RMSE = `RMSE`,
    MAE = `MAE`,
    MPE = `MPE`,
    MAPE = `MAPE`,
    MASE = `MASE`,
    ACF1 = `ACF1`
  )
kable(error_measures_sarima_310_010_12, caption = "Medidas de Error del Modelo SARIMA(3,1,0)(0,1,0)[12] en el Conjunto de Entrenamiento")
```

### Pruebas de Raíz Unitaria en los Residuos del SARIMA(3,1,0)(0,1,0)[12]
```{r}
residuos_sarima_310_010_12 <- residuals(modelo_sarima_310_010_12)

adf_result_sarima_310_010_12 <- adf.test(residuos_sarima_310_010_12, alternative = "stationary")
adf_table_sarima_310_010_12 <- data.frame(
  Test = "ADF Test",
  Statistic = adf_result_sarima_310_010_12$statistic,
  p_value = adf_result_sarima_310_010_12$p.value,
  Method = adf_result_sarima_310_010_12$method,
  row.names = NULL
)

kpss_result_sarima_310_010_12 <- kpss.test(residuos_sarima_310_010_12, null = "Level")
kpss_table_sarima_310_010_12 <- data.frame(
  Test = "KPSS Test",
  Statistic = kpss_result_sarima_310_010_12$statistic,
  p_value = kpss_result_sarima_310_010_12$p.value,
  Method = kpss_result_sarima_310_010_12$method,
  row.names = NULL
)

combined_tests_table_sarima_310_010_12 <- rbind(adf_table_sarima_310_010_12, kpss_table_sarima_310_010_12)

kable(combined_tests_table_sarima_310_010_12, caption = "Resultados de las Pruebas de Raíz Unitaria (ADF y KPSS) en los Residuos del Modelo SARIMA(3,1,0)(0,1,0)[12]")
```

### Diagnóstico de los Residuos del Modelo SARIMA(3,1,0)(0,1,0)[12]

#### Gráfico de Residuos
```{r}
autoplot(residuos_sarima_310_010_12) +
  labs(x = "Fecha", y = "Residuos", title = "Residuos del Modelo SARIMA(3,1,0)(0,1,0)[12]") +
  geom_hline(yintercept = 0, color = "red")
```

#### FAC y FACP de los Residuos
```{r}
residuos_sarima_310_010_12_acf <- ggAcf(residuos_sarima_310_010_12, lag.max = 24, type = "correlation") +
  labs(x = "Rezago", y = "Autocorrelación", title = "FAC de los Residuos del SARIMA(3,1,0)(0,1,0)[12]")
residuos_sarima_310_010_12_pacf <- ggAcf(residuos_sarima_310_010_12, lag.max = 24, type = "partial") +
  labs(x = "Rezago", y = "Autocorrelación parcial", title = "FACP de los Residuos del SARIMA(3,1,0)(0,1,0)[12]")
grid.arrange(residuos_sarima_310_010_12_acf, residuos_sarima_310_010_12_pacf)
```

#### Test de Ljung-Box
```{r}
ljung_box_sarima_310_010_12_10 <- Box.test(residuos_sarima_310_010_12, lag = 10, type = "Ljung-Box", fitdf = 3) |> tidy()
ljung_box_sarima_310_010_12_20 <- Box.test(residuos_sarima_310_010_12, lag = 20, type = "Ljung-Box", fitdf = 3) |> tidy()

ljung_box_sarima_310_010_12_combined <- rbind(ljung_box_sarima_310_010_12_10, ljung_box_sarima_310_010_12_20) %>%
  mutate(Test = c("Ljung-Box (Lag 10)", "Ljung-Box (Lag 20)"), .before = method) %>%
  select(Test, statistic, p.value, method, parameter) %>%
  rename(
    Estadistico = statistic,
    p_value = p.value,
    Metodo = method,
    Parametro = parameter
  )
kable(ljung_box_sarima_310_010_12_combined, caption = "Resultados del Test de Ljung-Box para los Residuos del SARIMA(3,1,0)(0,1,0)[12]")
```

#### Análisis de Homocedasticidad
```{r}
residuos_sarima_310_010_12_2 <- residuos_sarima_310_010_12^2
grafico_residuos_sarima_310_010_12_2 <- autoplot(residuos_sarima_310_010_12_2) +
  labs(x = "Fecha", y = expression(epsilon[t]^2), title = "Cuadrado de los Residuos del SARIMA(3,1,0)(0,1,0)[12]")
acf_residuos_sarima_310_010_12_2 <- ggAcf(residuos_sarima_310_010_12_2, type = "correlation") +
  labs(x = "Rezago", y = "FAC", title = "FAC del Cuadrado de los Residuos del SARIMA(3,1,0)(0,1,0)[12]")
grid.arrange(grafico_residuos_sarima_310_010_12_2, acf_residuos_sarima_310_010_12_2)
```

#### Análisis de Normalidad
```{r}
ggplot(data.frame(residuos = residuos_sarima_310_010_12), aes(sample = residuos)) +
  stat_qq() +
  stat_qq_line(color = "red") +
  labs(x = "Cuantiles teóricos", y = "Cuantiles de la muestra", title = "QQ-plot de los Residuos del SARIMA(3,1,0)(0,1,0)[12]")

ggplot(data.frame(residuos = residuos_sarima_310_010_12)) +
  geom_histogram(aes(x = residuos, y = ..density..), bins = 10) +
  stat_function(fun = dnorm, args = list(mean = mean(residuos_sarima_310_010_12), sd = sd(residuos_sarima_310_010_12)),
                col = "red", size = 1) +
  labs(x = "Residuos", y = "Densidad", title = "Histograma de los Residuos del SARIMA(3,1,0)(0,1,0)[12]")
```

#### Tests de Normalidad
```{r}
shapiro_test_result_sarima_310_010_12 <- shapiro.test(residuos_sarima_310_010_12) |> tidy()
jarque_bera_test_result_sarima_310_010_12 <- jarque.bera.test(residuos_sarima_310_010_12) |> tidy()

normalidad_sarima_310_010_12_combined <- rbind(
  shapiro_test_result_sarima_310_010_12 %>%
    mutate(Test = "Shapiro-Wilk", .before = method) %>%
    select(Test, statistic, p.value, method),
  jarque_bera_test_result_sarima_310_010_12 %>%
    mutate(Test = "Jarque-Bera", .before = method) %>%
    select(Test, statistic, p.value, method)
) %>%
  rename(
    Estadistico = statistic,
    p_value = p.value,
    Metodo = method
  )
kable(normalidad_sarima_310_010_12_combined, caption = "Resultados de los Tests de Normalidad para los Residuos del SARIMA(3,1,0)(0,1,0)[12]")
```

## Exploración del Modelo SARIMA(0,1,0)(3,1,0)[3] con Componente Estacional Trimestral AR(3)

Dado que se observaron picos en los meses de marzo, junio, septiembre y diciembre en el gráfico estacional, lo que sugiere una estacionalidad trimestral, exploraremos un modelo SARIMA que incorpore esta periodicidad. Específicamente, se propone un modelo SARIMA(0,1,0)(3,1,0)[3], que aplica una diferencia regular (d=1) y una diferencia estacional trimestral (D=1, período=3), además de incluir un componente autorregresivo estacional de orden 3 (P=3) para capturar la dependencia en los rezagos trimestrales.

### Ajuste del Modelo SARIMA(0,1,0)(3,1,0)[3]
```{r}
modelo_sarima_010_310_3 <- Arima(y = cantidad_clientes_ts,
                     order = c(0, 1, 0), # p, d, q para el componente no estacional
                     seasonal = list(order = c(3, 1, 0), period = 3), # P, D, Q para el componente estacional, con período 3
                     method = "ML")

sarima_coef_p_values_df_010_310_3 <- coeftest(modelo_sarima_010_310_3) |>
  unclass() |>
  as.data.frame() |>
  tibble::rownames_to_column(var = "term") |>
  dplyr::select(term, `Pr(>|z|)`) |>
  dplyr::rename(p.value = `Pr(>|z|)`)

tbl_regression(modelo_sarima_010_310_3, exponentiate = FALSE) |>
  modify_header(label = "**Término**") |>
  modify_caption("Coeficientes del Modelo SARIMA(0,1,0)(3,1,0)[3]") |>
  modify_table_body(~ .x |>
                      dplyr::left_join(sarima_coef_p_values_df_010_310_3, by = "term")) |>
  add_significance_stars()
```

### Criterios de Información del Modelo SARIMA(0,1,0)(3,1,0)[3]
```{r}
model_sarima_010_310_3_metrics <- data.frame(
  AIC = modelo_sarima_010_310_3$aic,
  AICc = modelo_sarima_010_310_3$aicc,
  BIC = modelo_sarima_010_310_3$bic
)
kable(model_sarima_010_310_3_metrics, caption = "Criterios de Información del Modelo SARIMA(0,1,0)(3,1,0)[3]")
```

### Medidas de Error del Modelo SARIMA(0,1,0)(3,1,0)[3]
```{r}
error_measures_sarima_010_310_3 <- accuracy(modelo_sarima_010_310_3) %>%
  as.data.frame() %>%
  tibble::rownames_to_column(var = "Conjunto") %>%
  dplyr::rename(
    RMSE = `RMSE`,
    MAE = `MAE`,
    MPE = `MPE`,
    MAPE = `MAPE`,
    MASE = `MASE`,
    ACF1 = `ACF1`
  )
kable(error_measures_sarima_010_310_3, caption = "Medidas de Error del Modelo SARIMA(0,1,0)(3,1,0)[3] en el Conjunto de Entrenamiento")
```

### Pruebas de Raíz Unitaria en los Residuos del SARIMA(0,1,0)(3,1,0)[3]
```{r}
residuos_sarima_010_310_3 <- residuals(modelo_sarima_010_310_3)

adf_result_sarima_010_310_3 <- adf.test(residuos_sarima_010_310_3, alternative = "stationary")
adf_table_sarima_010_310_3 <- data.frame(
  Test = "ADF Test",
  Statistic = adf_result_sarima_010_310_3$statistic,
  p_value = adf_result_sarima_010_310_3$p.value,
  Method = adf_result_sarima_010_310_3$method,
  row.names = NULL
)

kpss_result_sarima_010_310_3 <- kpss.test(residuos_sarima_010_310_3, null = "Level")
kpss_table_sarima_010_310_3 <- data.frame(
  Test = "KPSS Test",
  Statistic = kpss_result_sarima_010_310_3$statistic,
  p_value = kpss_result_sarima_010_310_3$p.value,
  Method = kpss_result_sarima_010_310_3$method,
  row.names = NULL
)

combined_tests_table_sarima_010_310_3 <- rbind(adf_table_sarima_010_310_3, kpss_table_sarima_010_310_3)

kable(combined_tests_table_sarima_010_310_3, caption = "Resultados de las Pruebas de Raíz Unitaria (ADF y KPSS) en los Residuos del Modelo SARIMA(0,1,0)(3,1,0)[3]")
```

### Diagnóstico de los Residuos del Modelo SARIMA(0,1,0)(3,1,0)[3]

#### Gráfico de Residuos
```{r}
autoplot(residuos_sarima_010_310_3) +
  labs(x = "Fecha", y = "Residuos", title = "Residuos del Modelo SARIMA(0,1,0)(3,1,0)[3]") +
  geom_hline(yintercept = 0, color = "red")
```

#### FAC y FACP de los Residuos
```{r}
residuos_sarima_010_310_3_acf <- ggAcf(residuos_sarima_010_310_3, lag.max = 24, type = "correlation") +
  labs(x = "Rezago", y = "Autocorrelación", title = "FAC de los Residuos del SARIMA(0,1,0)(3,1,0)[3]")
residuos_sarima_010_310_3_pacf <- ggAcf(residuos_sarima_010_310_3, lag.max = 24, type = "partial") +
  labs(x = "Rezago", y = "Autocorrelación parcial", title = "FACP de los Residuos del SARIMA(0,1,0)(3,1,0)[3]")
grid.arrange(residuos_sarima_010_310_3_acf, residuos_sarima_010_310_3_pacf)
```

#### Test de Ljung-Box
```{r}
ljung_box_sarima_010_310_3_10 <- Box.test(residuos_sarima_010_310_3, lag = 10, type = "Ljung-Box", fitdf = 3) |> tidy()
ljung_box_sarima_010_310_3_20 <- Box.test(residuos_sarima_010_310_3, lag = 20, type = "Ljung-Box", fitdf = 3) |> tidy()

ljung_box_sarima_010_310_3_combined <- rbind(ljung_box_sarima_010_310_3_10, ljung_box_sarima_010_310_3_20) %>%
  mutate(Test = c("Ljung-Box (Lag 10)", "Ljung-Box (Lag 20)"), .before = method) %>%
  select(Test, statistic, p.value, method, parameter) %>%
  rename(
    Estadistico = statistic,
    p_value = p.value,
    Metodo = method,
    Parametro = parameter
  )
kable(ljung_box_sarima_010_310_3_combined, caption = "Resultados del Test de Ljung-Box para los Residuos del SARIMA(0,1,0)(3,1,0)[3]")
```

#### Análisis de Homocedasticidad
```{r}
residuos_sarima_010_310_3_2 <- residuos_sarima_010_310_3^2
grafico_residuos_sarima_010_310_3_2 <- autoplot(residuos_sarima_010_310_3_2) +
  labs(x = "Fecha", y = expression(epsilon[t]^2), title = "Cuadrado de los Residuos del SARIMA(0,1,0)(3,1,0)[3]")
acf_residuos_sarima_010_310_3_2 <- ggAcf(residuos_sarima_010_310_3_2, type = "correlation") +
  labs(x = "Rezago", y = "FAC", title = "FAC del Cuadrado de los Residuos del SARIMA(0,1,0)(3,1,0)[3]")
grid.arrange(grafico_residuos_sarima_010_310_3_2, acf_residuos_sarima_010_310_3_2)
```

#### Análisis de Normalidad
```{r}
ggplot(data.frame(residuos = residuos_sarima_010_310_3), aes(sample = residuos)) +
  stat_qq() +
  stat_qq_line(color = "red") +
  labs(x = "Cuantiles teóricos", y = "Cuantiles de la muestra", title = "QQ-plot de los Residuos del SARIMA(0,1,0)(3,1,0)[3]")

ggplot(data.frame(residuos = residuos_sarima_010_310_3)) +
  geom_histogram(aes(x = residuos, y = ..density..), bins = 10) +
  stat_function(fun = dnorm, args = list(mean = mean(residuos_sarima_010_310_3), sd = sd(residuos_sarima_010_310_3)),
                col = "red", size = 1) +
  labs(x = "Residuos", y = "Densidad", title = "Histograma de los Residuos del SARIMA(0,1,0)(3,1,0)[3]")
```

#### Tests de Normalidad
```{r}
shapiro_test_result_sarima_010_310_3 <- shapiro.test(residuos_sarima_010_310_3) |> tidy()
jarque_bera_test_result_sarima_010_310_3 <- jarque.bera.test(residuos_sarima_010_310_3) |> tidy()

normalidad_sarima_010_310_3_combined <- rbind(
  shapiro_test_result_sarima_010_310_3 %>%
    mutate(Test = "Shapiro-Wilk", .before = method) %>%
    select(Test, statistic, p.value, method),
  jarque_bera_test_result_sarima_010_310_3 %>%
    mutate(Test = "Jarque-Bera", .before = method) %>%
    select(Test, statistic, p.value, method)
) %>%
  rename(
    Estadistico = statistic,
    p_value = p.value,
    Metodo = method
  )
kable(normalidad_sarima_010_310_3_combined, caption = "Resultados de los Tests de Normalidad para los Residuos del SARIMA(0,1,0)(3,1,0)[3]")
```

## Exploración del Modelo SARIMA(3,1,0)(3,1,0)[3] con Componentes Normales y Estacionales Trimestrales

Basándonos en la posible relevancia de los componentes no estacionales y la fuerte evidencia de estacionalidad trimestral, se propone explorar un modelo SARIMA más completo: el SARIMA(3,1,0)(3,1,0)[3]. Este modelo incorpora una diferencia regular (d=1) para la tendencia, un componente autorregresivo no estacional de orden 3 (p=3), una diferencia estacional trimestral (D=1, período=3) y un componente autorregresivo estacional de orden 3 (P=3).

### Ajuste del Modelo SARIMA(3,1,0)(3,1,0)[3]
```{r}
modelo_sarima_310_310_3 <- Arima(y = cantidad_clientes_ts,
                     order = c(3, 1, 0), # p, d, q para el componente no estacional
                     seasonal = list(order = c(3, 1, 0), period = 3), # P, D, Q para el componente estacional, con período 3
                     method = "ML")

sarima_coef_p_values_df_310_310_3 <- coeftest(modelo_sarima_310_310_3) |>
  unclass() |>
  as.data.frame() |>
  tibble::rownames_to_column(var = "term") |>
  dplyr::select(term, `Pr(>|z|)`) |>
  dplyr::rename(p.value = `Pr(>|z|)`)

tbl_regression(modelo_sarima_310_310_3, exponentiate = FALSE) |>
  modify_header(label = "**Término**") |>
  modify_caption("Coeficientes del Modelo SARIMA(3,1,0)(3,1,0)[3]") |>
  modify_table_body(~ .x |>
                      dplyr::left_join(sarima_coef_p_values_df_310_310_3, by = "term")) |>
  add_significance_stars()
```

### Criterios de Información del Modelo SARIMA(3,1,0)(3,1,0)[3]
```{r}
model_sarima_310_310_3_metrics <- data.frame(
  AIC = modelo_sarima_310_310_3$aic,
  AICc = modelo_sarima_310_310_3$aicc,
  BIC = modelo_sarima_310_310_3$bic
)
kable(model_sarima_310_310_3_metrics, caption = "Criterios de Información del Modelo SARIMA(3,1,0)(3,1,0)[3]")
```

### Medidas de Error del Modelo SARIMA(3,1,0)(3,1,0)[3]
```{r}
error_measures_sarima_310_310_3 <- accuracy(modelo_sarima_310_310_3) %>%
  as.data.frame() %>%
  tibble::rownames_to_column(var = "Conjunto") %>%
  dplyr::rename(
    RMSE = `RMSE`,
    MAE = `MAE`,
    MPE = `MPE`,
    MAPE = `MAPE`,
    MASE = `MASE`,
    ACF1 = `ACF1`
  )
kable(error_measures_sarima_310_310_3, caption = "Medidas de Error del Modelo SARIMA(3,1,0)(3,1,0)[3] en el Conjunto de Entrenamiento")
```

### Pruebas de Raíz Unitaria en los Residuos del SARIMA(3,1,0)(3,1,0)[3]
```{r}
residuos_sarima_310_310_3 <- residuals(modelo_sarima_310_310_3)

adf_result_sarima_310_310_3 <- adf.test(residuos_sarima_310_310_3, alternative = "stationary")
adf_table_sarima_310_310_3 <- data.frame(
  Test = "ADF Test",
  Statistic = adf_result_sarima_310_310_3$statistic,
  p_value = adf_result_sarima_310_310_3$p.value,
  Method = adf_result_sarima_310_310_3$method,
  row.names = NULL
)

kpss_result_sarima_310_310_3 <- kpss.test(residuos_sarima_310_310_3, null = "Level")
kpss_table_sarima_310_310_3 <- data.frame(
  Test = "KPSS Test",
  Statistic = kpss_result_sarima_310_310_3$statistic,
  p_value = kpss_result_sarima_310_310_3$p.value,
  Method = kpss_result_sarima_310_310_3$method,
  row.names = NULL
)

combined_tests_table_sarima_310_310_3 <- rbind(adf_table_sarima_310_310_3, kpss_table_sarima_310_310_3)

kable(combined_tests_table_sarima_310_310_3, caption = "Resultados de las Pruebas de Raíz Unitaria (ADF y KPSS) en los Residuos del Modelo SARIMA(3,1,0)(3,1,0)[3]")
```

### Diagnóstico de los Residuos del Modelo SARIMA(3,1,0)(3,1,0)[3]

#### Gráfico de Residuos
```{r}
autoplot(residuos_sarima_310_310_3) +
  labs(x = "Fecha", y = "Residuos", title = "Residuos del Modelo SARIMA(3,1,0)(3,1,0)[3]") +
  geom_hline(yintercept = 0, color = "red")
```

#### FAC y FACP de los Residuos
```{r}
residuos_sarima_310_310_3_acf <- ggAcf(residuos_sarima_310_310_3, lag.max = 24, type = "correlation") +
  labs(x = "Rezago", y = "Autocorrelación", title = "FAC de los Residuos del SARIMA(3,1,0)(3,1,0)[3]")
residuos_sarima_310_310_3_pacf <- ggAcf(residuos_sarima_310_310_3, lag.max = 24, type = "partial") +
  labs(x = "Rezago", y = "Autocorrelación parcial", title = "FACP de los Residuos del SARIMA(3,1,0)(3,1,0)[3]")
grid.arrange(residuos_sarima_310_310_3_acf, residuos_sarima_310_310_3_pacf)
```

#### Test de Ljung-Box
```{r}
ljung_box_sarima_310_310_3_10 <- Box.test(residuos_sarima_310_310_3, lag = 10, type = "Ljung-Box", fitdf = 3) |> tidy()
ljung_box_sarima_310_310_3_20 <- Box.test(residuos_sarima_310_310_3, lag = 20, type = "Ljung-Box", fitdf = 3) |> tidy()

ljung_box_sarima_310_310_3_combined <- rbind(ljung_box_sarima_310_310_3_10, ljung_box_sarima_310_310_3_20) %>%
  mutate(Test = c("Ljung-Box (Lag 10)", "Ljung-Box (Lag 20)"), .before = method) %>%
  select(Test, statistic, p.value, method, parameter) %>%
  rename(
    Estadistico = statistic,
    p_value = p.value,
    Metodo = method,
    Parametro = parameter
  )
kable(ljung_box_sarima_310_310_3_combined, caption = "Resultados del Test de Ljung-Box para los Residuos del SARIMA(3,1,0)(3,1,0)[3]")
```

#### Análisis de Homocedasticidad
```{r}
residuos_sarima_310_310_3_2 <- residuos_sarima_310_310_3^2
grafico_residuos_sarima_310_310_3_2 <- autoplot(residuos_sarima_310_310_3_2) +
  labs(x = "Fecha", y = expression(epsilon[t]^2), title = "Cuadrado de los Residuos del SARIMA(3,1,0)(3,1,0)[3]")
acf_residuos_sarima_310_310_3_2 <- ggAcf(residuos_sarima_310_310_3_2, type = "correlation") +
  labs(x = "Rezago", y = "FAC", title = "FAC del Cuadrado de los Residuos del SARIMA(3,1,0)(3,1,0)[3]")
grid.arrange(grafico_residuos_sarima_310_310_3_2, acf_residuos_sarima_310_310_3_2)
```

#### Análisis de Normalidad
```{r}
ggplot(data.frame(residuos = residuos_sarima_310_310_3), aes(sample = residuos)) +
  stat_qq() +
  stat_qq_line(color = "red") +
  labs(x = "Cuantiles teóricos", y = "Cuantiles de la muestra", title = "QQ-plot de los Residuos del SARIMA(3,1,0)(3,1,0)[3]")

ggplot(data.frame(residuos = residuos_sarima_310_310_3)) +
  geom_histogram(aes(x = residuos, y = ..density..), bins = 10) +
  stat_function(fun = dnorm, args = list(mean = mean(residuos_sarima_310_310_3), sd = sd(residuos_sarima_310_310_3)),
                col = "red", size = 1) +
  labs(x = "Residuos", y = "Densidad", title = "Histograma de los Residuos del SARIMA(3,1,0)(3,1,0)[3]")
```

#### Tests de Normalidad
```{r}
shapiro_test_result_sarima_310_310_3 <- shapiro.test(residuos_sarima_310_310_3) |> tidy()
jarque_bera_test_result_sarima_310_310_3 <- jarque.bera.test(residuos_sarima_310_310_3) |> tidy()

normalidad_sarima_310_310_3_combined <- rbind(
  shapiro_test_result_sarima_310_310_3 %>%
    mutate(Test = "Shapiro-Wilk", .before = method) %>%
    select(Test, statistic, p.value, method),
  jarque_bera_test_result_sarima_310_310_3 %>%
    mutate(Test = "Jarque-Bera", .before = method) %>%
    select(Test, statistic, p.value, method)
) %>%
  rename(
    Estadistico = statistic,
    p_value = p.value,
    Metodo = method
  )
kable(normalidad_sarima_310_310_3_combined, caption = "Resultados de los Tests de Normalidad para los Residuos del SARIMA(3,1,0)(3,1,0)[3]")
```

## Comparación de Modelos SARIMA
